//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from F:\C#\Misaka12456 (Misaka Castle)\Rabotora\Rabotora.Core\RabotoraScriptFormat\RabotoraScriptFormat.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Rabotora.Core.RabotoraScriptFormat {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
public partial class RabotoraScriptFormatLexer : Lexer {
	public const int
		Whitespace=1, LineComment=2, Comment=3, WS=4, LParen=5, RParen=6, LBrace=7, 
		RBrace=8, QttMrk=9, QttMrk2=10, Comma=11, Semicolon=12, QuesMark=13, ClassKeyWord=14, 
		ActionKeyWord=15, PrivateKeyWord=16, PublicKeyWord=17, InternalKeyWord=18, 
		StaticKeyWord=19, Int=20, Float=21, Word=22, PlainWord=23, FuncWord=24;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"Whitespace", "LineComment", "Comment", "WS", "LParen", "RParen", "LBrace", 
		"RBrace", "QttMrk", "QttMrk2", "Comma", "Semicolon", "QuesMark", "ClassKeyWord", 
		"ActionKeyWord", "PrivateKeyWord", "PublicKeyWord", "InternalKeyWord", 
		"StaticKeyWord", "ALPHABET", "UNDERLINE", "DIGITSTART", "ZERO", "DIGIT", 
		"DOT", "NEGATIVE", "Int", "Float", "Word", "PlainWord", "FuncWord"
	};


	public RabotoraScriptFormatLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, "'('", "')'", "'{'", "'}'", "'''", "'\"'", 
		"','", "';'", "'?'", "'class'", "'void'", "'private'", "'public'", "'internal'", 
		"'static'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "Whitespace", "LineComment", "Comment", "WS", "LParen", "RParen", 
		"LBrace", "RBrace", "QttMrk", "QttMrk2", "Comma", "Semicolon", "QuesMark", 
		"ClassKeyWord", "ActionKeyWord", "PrivateKeyWord", "PublicKeyWord", "InternalKeyWord", 
		"StaticKeyWord", "Int", "Float", "Word", "PlainWord", "FuncWord"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "RabotoraScriptFormat.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x1A\xEF\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 "+
		"\t \x3\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\a\x3J\n\x3\f\x3\xE"+
		"\x3M\v\x3\x3\x3\x5\x3P\n\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4"+
		"\x3\x4\a\x4Z\n\x4\f\x4\xE\x4]\v\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x5"+
		"\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\t\x3\t\x3\n\x3\n"+
		"\x3\v\x3\v\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3\xF\x3"+
		"\xF\x3\xF\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x3\x11"+
		"\x3\x11\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x12\x3\x12\x3\x12\x3\x12"+
		"\x3\x12\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13"+
		"\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x15\x3\x15\x3\x16"+
		"\x3\x16\x3\x17\x3\x17\x3\x18\x3\x18\x3\x19\x3\x19\x5\x19\xAE\n\x19\x3"+
		"\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1C\x5\x1C\xB5\n\x1C\x3\x1C\x3\x1C\x3\x1C"+
		"\a\x1C\xBA\n\x1C\f\x1C\xE\x1C\xBD\v\x1C\x5\x1C\xBF\n\x1C\x3\x1D\x3\x1D"+
		"\x3\x1D\x6\x1D\xC4\n\x1D\r\x1D\xE\x1D\xC5\x3\x1E\x5\x1E\xC9\n\x1E\x3\x1E"+
		"\x3\x1E\x3\x1E\x6\x1E\xCE\n\x1E\r\x1E\xE\x1E\xCF\x3\x1F\x5\x1F\xD3\n\x1F"+
		"\x3\x1F\x3\x1F\x3\x1F\x6\x1F\xD8\n\x1F\r\x1F\xE\x1F\xD9\x3\x1F\x3\x1F"+
		"\x3\x1F\x6\x1F\xDF\n\x1F\r\x1F\xE\x1F\xE0\x3\x1F\x3\x1F\x5\x1F\xE5\n\x1F"+
		"\x3 \x3 \x3 \x3 \a \xEB\n \f \xE \xEE\v \x4K[\x2\x2!\x3\x2\x3\x5\x2\x4"+
		"\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17"+
		"\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14"+
		"\'\x2\x15)\x2\x2+\x2\x2-\x2\x2/\x2\x2\x31\x2\x2\x33\x2\x2\x35\x2\x2\x37"+
		"\x2\x16\x39\x2\x17;\x2\x18=\x2\x19?\x2\x1A\x3\x2\x6\r\x2UUYY\x61\x61\x63"+
		"\x63\x65\x65ggjkrrvv}}\x7F\x7F\x5\x2\v\f\xF\xF\"\"\x4\x2\x43\\\x63|\x3"+
		"\x2\x33;\xFA\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t"+
		"\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11"+
		"\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2"+
		"\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2"+
		"\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2"+
		"\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2"+
		"\x2?\x3\x2\x2\x2\x3\x41\x3\x2\x2\x2\x5\x45\x3\x2\x2\x2\aU\x3\x2\x2\x2"+
		"\t\x63\x3\x2\x2\x2\vg\x3\x2\x2\x2\ri\x3\x2\x2\x2\xFk\x3\x2\x2\x2\x11m"+
		"\x3\x2\x2\x2\x13o\x3\x2\x2\x2\x15q\x3\x2\x2\x2\x17s\x3\x2\x2\x2\x19u\x3"+
		"\x2\x2\x2\x1Bw\x3\x2\x2\x2\x1Dy\x3\x2\x2\x2\x1F\x7F\x3\x2\x2\x2!\x84\x3"+
		"\x2\x2\x2#\x8C\x3\x2\x2\x2%\x93\x3\x2\x2\x2\'\x9C\x3\x2\x2\x2)\xA3\x3"+
		"\x2\x2\x2+\xA5\x3\x2\x2\x2-\xA7\x3\x2\x2\x2/\xA9\x3\x2\x2\x2\x31\xAD\x3"+
		"\x2\x2\x2\x33\xAF\x3\x2\x2\x2\x35\xB1\x3\x2\x2\x2\x37\xB4\x3\x2\x2\x2"+
		"\x39\xC0\x3\x2\x2\x2;\xC8\x3\x2\x2\x2=\xD2\x3\x2\x2\x2?\xE6\x3\x2\x2\x2"+
		"\x41\x42\t\x2\x2\x2\x42\x43\x3\x2\x2\x2\x43\x44\b\x2\x2\x2\x44\x4\x3\x2"+
		"\x2\x2\x45\x46\a\x31\x2\x2\x46G\a\x31\x2\x2GK\x3\x2\x2\x2HJ\v\x2\x2\x2"+
		"IH\x3\x2\x2\x2JM\x3\x2\x2\x2KL\x3\x2\x2\x2KI\x3\x2\x2\x2LO\x3\x2\x2\x2"+
		"MK\x3\x2\x2\x2NP\a\xF\x2\x2ON\x3\x2\x2\x2OP\x3\x2\x2\x2PQ\x3\x2\x2\x2"+
		"QR\a\f\x2\x2RS\x3\x2\x2\x2ST\b\x3\x2\x2T\x6\x3\x2\x2\x2UV\a\x31\x2\x2"+
		"VW\a,\x2\x2W[\x3\x2\x2\x2XZ\v\x2\x2\x2YX\x3\x2\x2\x2Z]\x3\x2\x2\x2[\\"+
		"\x3\x2\x2\x2[Y\x3\x2\x2\x2\\^\x3\x2\x2\x2][\x3\x2\x2\x2^_\a,\x2\x2_`\a"+
		"\x31\x2\x2`\x61\x3\x2\x2\x2\x61\x62\b\x4\x2\x2\x62\b\x3\x2\x2\x2\x63\x64"+
		"\t\x3\x2\x2\x64\x65\x3\x2\x2\x2\x65\x66\b\x5\x2\x2\x66\n\x3\x2\x2\x2g"+
		"h\a*\x2\x2h\f\x3\x2\x2\x2ij\a+\x2\x2j\xE\x3\x2\x2\x2kl\a}\x2\x2l\x10\x3"+
		"\x2\x2\x2mn\a\x7F\x2\x2n\x12\x3\x2\x2\x2op\a)\x2\x2p\x14\x3\x2\x2\x2q"+
		"r\a$\x2\x2r\x16\x3\x2\x2\x2st\a.\x2\x2t\x18\x3\x2\x2\x2uv\a=\x2\x2v\x1A"+
		"\x3\x2\x2\x2wx\a\x41\x2\x2x\x1C\x3\x2\x2\x2yz\a\x65\x2\x2z{\an\x2\x2{"+
		"|\a\x63\x2\x2|}\au\x2\x2}~\au\x2\x2~\x1E\x3\x2\x2\x2\x7F\x80\ax\x2\x2"+
		"\x80\x81\aq\x2\x2\x81\x82\ak\x2\x2\x82\x83\a\x66\x2\x2\x83 \x3\x2\x2\x2"+
		"\x84\x85\ar\x2\x2\x85\x86\at\x2\x2\x86\x87\ak\x2\x2\x87\x88\ax\x2\x2\x88"+
		"\x89\a\x63\x2\x2\x89\x8A\av\x2\x2\x8A\x8B\ag\x2\x2\x8B\"\x3\x2\x2\x2\x8C"+
		"\x8D\ar\x2\x2\x8D\x8E\aw\x2\x2\x8E\x8F\a\x64\x2\x2\x8F\x90\an\x2\x2\x90"+
		"\x91\ak\x2\x2\x91\x92\a\x65\x2\x2\x92$\x3\x2\x2\x2\x93\x94\ak\x2\x2\x94"+
		"\x95\ap\x2\x2\x95\x96\av\x2\x2\x96\x97\ag\x2\x2\x97\x98\at\x2\x2\x98\x99"+
		"\ap\x2\x2\x99\x9A\a\x63\x2\x2\x9A\x9B\an\x2\x2\x9B&\x3\x2\x2\x2\x9C\x9D"+
		"\au\x2\x2\x9D\x9E\av\x2\x2\x9E\x9F\a\x63\x2\x2\x9F\xA0\av\x2\x2\xA0\xA1"+
		"\ak\x2\x2\xA1\xA2\a\x65\x2\x2\xA2(\x3\x2\x2\x2\xA3\xA4\t\x4\x2\x2\xA4"+
		"*\x3\x2\x2\x2\xA5\xA6\a\x61\x2\x2\xA6,\x3\x2\x2\x2\xA7\xA8\t\x5\x2\x2"+
		"\xA8.\x3\x2\x2\x2\xA9\xAA\a\x32\x2\x2\xAA\x30\x3\x2\x2\x2\xAB\xAE\x5-"+
		"\x17\x2\xAC\xAE\x5/\x18\x2\xAD\xAB\x3\x2\x2\x2\xAD\xAC\x3\x2\x2\x2\xAE"+
		"\x32\x3\x2\x2\x2\xAF\xB0\a\x30\x2\x2\xB0\x34\x3\x2\x2\x2\xB1\xB2\a/\x2"+
		"\x2\xB2\x36\x3\x2\x2\x2\xB3\xB5\x5\x35\x1B\x2\xB4\xB3\x3\x2\x2\x2\xB4"+
		"\xB5\x3\x2\x2\x2\xB5\xBE\x3\x2\x2\x2\xB6\xBF\x5/\x18\x2\xB7\xBB\x5-\x17"+
		"\x2\xB8\xBA\x5\x31\x19\x2\xB9\xB8\x3\x2\x2\x2\xBA\xBD\x3\x2\x2\x2\xBB"+
		"\xB9\x3\x2\x2\x2\xBB\xBC\x3\x2\x2\x2\xBC\xBF\x3\x2\x2\x2\xBD\xBB\x3\x2"+
		"\x2\x2\xBE\xB6\x3\x2\x2\x2\xBE\xB7\x3\x2\x2\x2\xBF\x38\x3\x2\x2\x2\xC0"+
		"\xC1\x5\x37\x1C\x2\xC1\xC3\x5\x33\x1A\x2\xC2\xC4\x5\x31\x19\x2\xC3\xC2"+
		"\x3\x2\x2\x2\xC4\xC5\x3\x2\x2\x2\xC5\xC3\x3\x2\x2\x2\xC5\xC6\x3\x2\x2"+
		"\x2\xC6:\x3\x2\x2\x2\xC7\xC9\x5+\x16\x2\xC8\xC7\x3\x2\x2\x2\xC8\xC9\x3"+
		"\x2\x2\x2\xC9\xCA\x3\x2\x2\x2\xCA\xCD\x5)\x15\x2\xCB\xCE\x5)\x15\x2\xCC"+
		"\xCE\x5\x31\x19\x2\xCD\xCB\x3\x2\x2\x2\xCD\xCC\x3\x2\x2\x2\xCE\xCF\x3"+
		"\x2\x2\x2\xCF\xCD\x3\x2\x2\x2\xCF\xD0\x3\x2\x2\x2\xD0<\x3\x2\x2\x2\xD1"+
		"\xD3\x5+\x16\x2\xD2\xD1\x3\x2\x2\x2\xD2\xD3\x3\x2\x2\x2\xD3\xD4\x3\x2"+
		"\x2\x2\xD4\xD7\x5)\x15\x2\xD5\xD8\x5)\x15\x2\xD6\xD8\x5\x31\x19\x2\xD7"+
		"\xD5\x3\x2\x2\x2\xD7\xD6\x3\x2\x2\x2\xD8\xD9\x3\x2\x2\x2\xD9\xD7\x3\x2"+
		"\x2\x2\xD9\xDA\x3\x2\x2\x2\xDA\xDE\x3\x2\x2\x2\xDB\xDF\x5)\x15\x2\xDC"+
		"\xDF\x5\x31\x19\x2\xDD\xDF\x5\x3\x2\x2\xDE\xDB\x3\x2\x2\x2\xDE\xDC\x3"+
		"\x2\x2\x2\xDE\xDD\x3\x2\x2\x2\xDF\xE0\x3\x2\x2\x2\xE0\xDE\x3\x2\x2\x2"+
		"\xE0\xE1\x3\x2\x2\x2\xE1\xE4\x3\x2\x2\x2\xE2\xE5\x5)\x15\x2\xE3\xE5\x5"+
		"\x31\x19\x2\xE4\xE2\x3\x2\x2\x2\xE4\xE3\x3\x2\x2\x2\xE5>\x3\x2\x2\x2\xE6"+
		"\xEC\x5;\x1E\x2\xE7\xE8\x5\x33\x1A\x2\xE8\xE9\x5;\x1E\x2\xE9\xEB\x3\x2"+
		"\x2\x2\xEA\xE7\x3\x2\x2\x2\xEB\xEE\x3\x2\x2\x2\xEC\xEA\x3\x2\x2\x2\xEC"+
		"\xED\x3\x2\x2\x2\xED@\x3\x2\x2\x2\xEE\xEC\x3\x2\x2\x2\x15\x2KO[\xAD\xB4"+
		"\xBB\xBE\xC5\xC8\xCD\xCF\xD2\xD7\xD9\xDE\xE0\xE4\xEC\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Rabotora.Core.RabotoraScriptFormat
